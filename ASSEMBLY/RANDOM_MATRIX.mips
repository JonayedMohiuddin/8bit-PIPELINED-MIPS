# RANDOM MATRIX DISPLAY DEMO 
# MADE BY : JONAYED MOHIUDDIN 
# EMAIL   : jonayedmohiuddin@gmail.com
# Intended to run by the 8-bit mips here : https://github.com/JonayedMohiuddin/8bit_MIPS

# IO PORTS:
# 0($io) => X ENABLE + DATA
# 1($io) => Y ENABLE + DATA
# 2($io) => UPDATE FLAG
# 3($io) => FLUSH FLAG
# 4($io) => KEYBOARD INPUT
# 5($io) => TEXT OUTPUT (TTY)
# ...    => UNUSED
# 13($io) => SIGNED DECIMAL OUTPUT DISPLAY (7 SEGMENT DISPLAY)
# 14($io) => DEBUG OUTPUT 
# 15($io) => RAND INPUT
# !! DISPLAY Caution: x is 5 bit and y is 4 bit 

addi $t2, $zero 32 
addi $t0, $zero, 0 # X value. Initial x at 0

repeat:
    lw $t1, 15($io)    # load random input for y value
    andi $t1, $t1, 15  # display y value is 4 bit
    sw $t0, 0($io)     # store x value of pixel in display
    sw $t1, 1($io)     # store y value of pixel in display
    sw $zero, 2($io)   # save pixel x, y value in display
    addi $t0, $t0, 1   # increment x by 1
    beq $t0, $t2, draw # if x = 32, go to draw
    j repeat           # repeat

draw:
    sw $zero, 3($io) # flush flag, show all pixels.
    addi $t0, $zero, 0 # reset x to 0
    j repeat 
